frontend:
  host: front.random.ecorp.demo
  name: ecorp-frontend
  image: docker.io/devprofr/ecorp-frontend-demo
  tag: 1.0.677411621
  replicaCount: 1
  healthEndpoint: /
  env: {}
  tls: {}
    # secretName: chart-example-tls
  resources: {}
    # limits:
    #   cpu: 200m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 64Mi

backend:
  host: back.random.ecorp.demo
  name: ecorp-backend
  image: docker.io/devprofr/ecorp-backend-demo
  tag: 1.0.641443181
  replicaCount: 2
  healthEndpoint: /health
  env:
    - name: Application__IsHttpsRedirectionEnabled
      value: "false"
    - name: Application__IsOpenTelemetryEnabled
      value: "false"
    - name: Application__IsSwaggerEnabled
      value: "true"
    - name: Logging__LogLevel__Default
      value: "Information"
    - name: Logging__LogLevel__Microsoft__AspNetCore
      value: "Information"
    - name: Logging__LogLevel__System
      value: "Information"
    - name: Logging__LogLevel__Ecorp
      value: "Debug"
    - name: OpenApi__Title
      value: "E Corp Backend Demo (REST API)"
    - name: OpenTelemetry__ServiceName
      value: "EcorpBackendDemo"
  ingressExtraHosts:
    # - host: back.ecorp.demo
    #   paths:
    #     - path: /
    #       pathType: Prefix
  tls: {}
    # secretName: chart-example-tls
  resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 64Mi

aspnetcore:
  environment: Production

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"

otelCollector:
  endpoint: "http://otel-svc:4317"
